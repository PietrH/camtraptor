% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_rai.R
\name{get_rai}
\alias{get_rai}
\title{Get Relative Abundance Index (RAI)}
\usage{
get_rai(datapkg, ..., species = "all", sex = NULL, age = NULL)
}
\arguments{
\item{datapkg}{a camera trap data package object, as returned by
\code{read_camtrap_dp()}, i.e. a list containing three data.frames:
\enumerate{
\item \code{observations}
\item \code{deployments}
\item \code{multimedia}
}

and a list with metadata: \code{datapackage}}

\item{...}{filter predicates for filtering on deployments}

\item{species}{a character with scientific names or common names (case
insensitive). If "all" (default), all scientific names are automatically
selected}

\item{sex}{a character defining the sex class to filter on, e.g. \code{"female"}
or \code{c("male", "undefined")}.  If \code{NULL}, default, all observations of all
sex classes are taken into account.}

\item{age}{a character vector defining the age class to filter on, e.g.
\code{"adult"} or \code{c("subadult", "adult")}. If \code{NULL}, default, all observations
of all age classes are taken into account.}
}
\value{
a tibble (data.frame) with the following columns:
\itemize{
\item \code{deployment_id} deployment unique identifier
\item \code{scientific_name} scientific name
\item \code{rai}: relative abundance index
}
}
\description{
Function to get the RAI (Relative Abundance Index) per
deployment. The RAI is normalized using 100 days deployment activity.
}
\examples{
# calculate RAI for all species
get_rai(camtrapdp) # species = "all" by default, so equivalent of
get_rai(camtrapdp, species = "all")

# selected species
get_rai(camtrapdp, species = c("Anas platyrhynchos", "Rattus norvegicus"))

# with vernacular names, even mixing languages
get_rai(camtrapdp, species = c("Mallard", "bruine rat"))

# mixed scientific and vernacular names
get_rai(camtrapdp, species = c("Anas platyrhynchos", "brown rat"))

# species argument is case insensitive
get_rai(camtrapdp, species = c("ANAS plAtyRhynChOS"))

# specify sex
get_rai(camtrapdp, sex = "female")
get_rai(camtrapdp, sex = c("female", "undefined"))

# specify age
get_rai(camtrapdp, age = "adult")
get_rai(camtrapdp, age = c("adult", "subadult"))

# apply filter(s): deployments with latitude >= 51.28
get_rai(camtrapdp, pred_gte("latitude", 51.28))

}
\seealso{
Other RAI functions: 
\code{\link{get_rai_individuals}()}
}
\concept{RAI functions}
